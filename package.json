{
  "name": "vscode-home-assistant",
  "displayName": "Home Assistant Config Helper",
  "description": " Completion for entity-id's in Home Assistant Configurations",
  "version": "1.43.0",
  "preview": false,
  "engines": {
    "vscode": "^1.45.1"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Formatters",
    "Snippets"
  ],
  "publisher": "keesschollaart",
  "repository": {
    "type": "git",
    "url": "https://github.com/keesschollaart81/vscode-home-assistant"
  },
  "bugs": {
    "url": "https://github.com/keesschollaart81/vscode-home-assistant/issues",
    "email": "keesschollaart81@hotmail.com"
  },
  "license": "MIT",
  "icon": "assets/logo.png",
  "activationEvents": [
    "workspaceContains:**/configuration.yaml",
    "workspaceContains:**/ui-lovelace.yaml",
    "onLanguage:home-assistant",
    "onFileSystem:ftp",
    "onFileSystem:ssh",
    "onFileSystem:sftp"
  ],
  "keywords": [
    "home",
    "assistant",
    "home-assistant",
    "homeassistant"
  ],
  "main": "./out/extension",
  "contributes": {
    "configuration": [
      {
        "title": "Home Assistant Config Helper",
        "properties": {
          "vscode-home-assistant.hostUrl": {
            "type": "string",
            "description": "The Host URL of your Home Assistant Host"
          },
          "vscode-home-assistant.longLivedAccessToken": {
            "type": "string",
            "description": "The Long Lived Access-Token for Home Assistant. Obtain a token via your user profile page in Home Assistant."
          },
          "vscode-home-assistant.ignoreCertificates": {
            "type": "boolean",
            "description": "Enable insecure transport. Check this if you want to connect over an insecure HTTPS transport with a invalid certificate!"
          },
          "vscode-home-assistant.searchPath": {
            "type": "string",
            "description": "The path from which your Home Assistant configuration files will be searched. Empty by default, so all files in your workspace will be evaluated. On large workspaces, setting this specifically to the path where your configuration files are located can improve performance drastically. Path can be absolute or relative to the workspace root.",
            "default": ""
          }
        }
      }
    ],
    "snippets": [
      {
        "language": "home-assistant",
        "path": "./out/snippets/homeassistant_automation.json"
      },
      {
        "language": "home-assistant",
        "path": "./out/snippets/homeassistant_script.json"
      }
    ],
    "languages": [
      {
        "id": "home-assistant",
        "configuration": "./syntaxes/yaml-language-configuration.json",
        "extensions": [
          ".yml",
          ".yaml"
        ],
        "aliases": [
          "Home Assistant",
          "homeassistant",
          "home-assistant"
        ]
      },
      {
        "comments": "unfortunately this dummy entry is necessary for embedding to work",
        "id": "home-assistant-jinja",
        "configuration": "./jinja-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "comments": [
          "YAML syntax as base for Home Assistant",
          "scopeName changed so that we can use it as base for injections"
        ],
        "language": "home-assistant",
        "scopeName": "source.home-assistant",
        "path": "./syntaxes/external/YAML.tmLanguage"
      },
      {
        "comments": [
          "Jinja syntax as injection into Home Assistant YAML",
          "This is so that we do not need to rely on the Jinja extension being installed"
        ],
        "language": "home-assistant-jinja",
        "scopeName": "source.home-assistant-jinja",
        "path": "./syntaxes/external/jinja.tmLanguage.json"
      },
      {
        "comments": [
          "Highlighting of Home Assistant keywords in Jinja"
        ],
        "path": "./syntaxes/home-assistant/jinja-keywords.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-keywords",
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Additional Jinja grammars"
        ],
        "path": "./syntaxes/home-assistant/jinja-extras.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-extras",
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Support for Jinja in double curly braces"
        ],
        "path": "./syntaxes/home-assistant/jinja-braces.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-braces",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "home-assistant-jinja"
        },
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Support for Jinja in single curly braces with percentage symbol"
        ],
        "path": "./syntaxes/home-assistant/jinja-braces-block.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-braces-block",
        "embeddedLanguages": {
          "meta.embedded.block.jinja": "home-assistant-jinja"
        },
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Support for Jinja in conditionals"
        ],
        "path": "./syntaxes/home-assistant/jinja-conditionals.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-conditionals",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "home-assistant-jinja",
          "meta.embedded.block.jinja": "home-assistant-jinja"
        },
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "The quote escapes implemented in the conditionals injection do not work inside brackets etc.",
          "Support for single quote escapes in Jinja"
        ],
        "path": "./syntaxes/home-assistant/jinja-single-quote-escape.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-single-quote-escape",
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "The quote escapes implemented in the conditionals injection do not work inside brackets etc.",
          "Support for double quote escapes in Jinja"
        ],
        "path": "./syntaxes/home-assistant/jinja-double-quote-escape.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-double-quote-escape",
        "injectTo": [
          "source.home-assistant"
        ]
      }
    ],
    "commands": [
      {
        "command": "vscode-home-assistant.reloadAll",
        "title": "Reload All",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.scriptReload",
        "title": "Reload Scripts",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.groupReload",
        "title": "Reload Groups",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homeassistantCheckConfig",
        "title": "Check Configuration (remote!)",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homeassistantReloadCoreConfig",
        "title": "Reload Configuration",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homeassistantRestart",
        "title": "Restart Home Assistant",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.automationReload",
        "title": "Reload Automations",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.conversationReload",
        "title": "Reload conversation intents",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.sceneReload",
        "title": "Reload Scenes",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.themeReload",
        "title": "Reload Themes",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.inputReload",
        "title": "Reload Inputs",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homekitReload",
        "title": "Reload HomeKit",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.filesizeReload",
        "title": "Reload File Size",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.minMaxReload",
        "title": "Reload Min/Max",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.genericThermostatReload",
        "title": "Reload Generic Thermostat",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.genericCameraReload",
        "title": "Reload Generic Camera",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.pingReload",
        "title": "Reload Ping",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.trendReload",
        "title": "Reload Trend",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.historyStatsReload",
        "title": "Reload History Stats",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.universalReload",
        "title": "Reload Universal Media Player",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.statisticsReload",
        "title": "Reload Statistics",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.filterReload",
        "title": "Reload Filter",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.restReload",
        "title": "Reload REST",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.commandLineReload",
        "title": "Reload Command Line",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.bayesianReload",
        "title": "Reload Bayesian",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.telegramReload",
        "title": "Reload Telegram",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.smtpReload",
        "title": "Reload SMTP",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.mqttReload",
        "title": "Reload MQTT",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.rpioGpioReload",
        "title": "Reload Raspberry Pi GPIO",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.knxReload",
        "title": "Reload KNX",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.templateReload",
        "title": "Reload Template Entities",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.customTemplatesReload",
        "title": "Reload custom Jinja2 templates",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.hassioAddonRestartGitPull",
        "title": "Restart 'Git Pull' Add-on",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.hassioHostReboot",
        "title": "Reboot Supervisor Host",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.getErrorLog",
        "title": "Get Error Logs",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.renderTemplate",
        "title": "Render Template",
        "category": "Home Assistant"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-home-assistant.renderTemplate",
          "when": "editorHasSelection"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-home-assistant.renderTemplate",
          "group": "home-assistant",
          "when": "editorHasSelection"
        }
      ]
    },
    "configurationDefaults": {
      "[home-assistant]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": true
        },
        "editor.autoIndent": "advanced"
      }
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix"
    ]
  },
  "scripts": {
    "compile": "ts-node src/language-service/src/schemas/generateSchemas.ts --quick && tsc -p ./ ",
    "format:eslint": "eslint \"**/src/**/*.ts\" --fix --ignore-path .gitignore",
    "format:prettier": "prettier \"**/src/**/*.{ts,json}\" --write",
    "format": "npm run format:eslint && npm run format:prettier",
    "lint:eslint": "eslint \"**/src/**/*.ts\" --ignore-path .gitignore",
    "lint:prettier": "prettier \"**/src/**/*.{ts,json}\" --check",
    "lint:types": "tsc",
    "lint": "npm run lint:eslint && npm run lint:prettier && npm run lint:types",
    "schema": "ts-node src/language-service/src/schemas/generateSchemas.ts",
    "test": "npm run compile",
    "watch": "tsc -watch -p ./",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@types/mocha": "10.0.8",
    "@types/node": "20.4.8",
    "@types/request": "2.48.12",
    "@types/vscode": "1.45.1",
    "@types/ws": "8.5.10",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^9.1.0",
    "husky": "^9.1.6",
    "lint-staged": "^15.2.10",
    "prettier": "^3.3.3",
    "rimraf": "5.0.5",
    "ts-loader": "^9.5.1",
    "ts-node": "10.9.2",
    "typescript": "^5.1.6",
    "typescript-json-schema": "0.62.0"
  },
  "dependencies": {
    "axios": "^1.7.7",
    "bufferutil": "^4.0.8",
    "home-assistant-js-websocket": "^9.1.0",
    "utf-8-validate": "^6.0.3",
    "vscode-extension-telemetry": "0.4.5",
    "vscode-json-languageservice": "3.9.1",
    "vscode-languageclient": "6.1.3",
    "vscode-languageserver": "6.1.1",
    "vscode-languageserver-protocol": "3.15.3",
    "vscode-languageserver-textdocument": "^1.0.8",
    "vscode-uri": "3.0.8",
    "ws": "8.17.1",
    "yaml": "1.10.2",
    "yaml-language-server": "0.12.0"
  }
}
