{
  "name": "vscode-home-assistant",
  "displayName": "Home Assistant Config Helper",
  "description": " Completion for entity-id's in Home Assistant Configurations",
  "version": "2.0.0",
  "preview": false,
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Formatters",
    "Snippets"
  ],
  "publisher": "keesschollaart",
  "repository": {
    "type": "git",
    "url": "https://github.com/keesschollaart81/vscode-home-assistant"
  },
  "bugs": {
    "url": "https://github.com/keesschollaart81/vscode-home-assistant/issues",
    "email": "keesschollaart81@hotmail.com"
  },
  "license": "MIT",
  "icon": "assets/logo.png",
  "activationEvents": [
    "workspaceContains:**/configuration.yaml",
    "workspaceContains:**/ui-lovelace.yaml",
    "onLanguage:home-assistant",
    "onFileSystem:ftp",
    "onFileSystem:ssh",
    "onFileSystem:sftp"
  ],
  "keywords": [
    "home",
    "assistant",
    "home-assistant",
    "homeassistant"
  ],
  "main": "./out/extension",
  "contributes": {
    "configuration": [
      {
        "title": "Home Assistant Config Helper",
        "properties": {
          "vscode-home-assistant.ignoreCertificates": {
            "type": "boolean",
            "description": "Enable insecure transport. Check this if you want to connect over an insecure HTTPS transport with a invalid certificate!"
          },
          "vscode-home-assistant.disableAutomaticFileAssociation": {
            "type": "boolean",
            "default": false,
            "description": "Disable automatic association of YAML files with the Home Assistant language. When enabled, the extension will not automatically set file associations for YAML files, even in detected Home Assistant workspaces."
          }
        }
      }
    ],
    "submenus": [
      {
        "id": "home-assistant.reload",
        "label": "Home Assistant: Reload specific integration"
      }
    ],
    "snippets": [
      {
        "language": "home-assistant",
        "path": "./out/snippets/homeassistant_automation.json"
      },
      {
        "language": "home-assistant",
        "path": "./out/snippets/homeassistant_script.json"
      }
    ],
    "languages": [
      {
        "id": "home-assistant",
        "configuration": "./syntaxes/yaml-language-configuration.json",
        "extensions": [
          ".yml",
          ".yaml"
        ],
        "aliases": [
          "Home Assistant",
          "homeassistant",
          "home-assistant"
        ]
      },
      {
        "comments": "unfortunately this dummy entry is necessary for embedding to work",
        "id": "home-assistant-jinja",
        "configuration": "./jinja-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "comments": [
          "YAML syntax as base for Home Assistant",
          "scopeName changed so that we can use it as base for injections"
        ],
        "language": "home-assistant",
        "scopeName": "source.home-assistant",
        "path": "./syntaxes/external/YAML.tmLanguage"
      },
      {
        "comments": [
          "Jinja syntax as injection into Home Assistant YAML",
          "This is so that we do not need to rely on the Jinja extension being installed"
        ],
        "language": "home-assistant-jinja",
        "scopeName": "source.home-assistant-jinja",
        "path": "./syntaxes/external/jinja.tmLanguage.json"
      },
      {
        "comments": [
          "Highlighting of Home Assistant keywords in Jinja"
        ],
        "path": "./syntaxes/home-assistant/jinja-keywords.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-keywords",
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Additional Jinja grammars"
        ],
        "path": "./syntaxes/home-assistant/jinja-extras.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-extras",
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Support for Jinja in double curly braces"
        ],
        "path": "./syntaxes/home-assistant/jinja-braces.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-braces",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "home-assistant-jinja"
        },
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Support for Jinja in single curly braces with percentage symbol"
        ],
        "path": "./syntaxes/home-assistant/jinja-braces-block.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-braces-block",
        "embeddedLanguages": {
          "meta.embedded.block.jinja": "home-assistant-jinja"
        },
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "Support for Jinja in conditionals"
        ],
        "path": "./syntaxes/home-assistant/jinja-conditionals.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-conditionals",
        "embeddedLanguages": {
          "meta.embedded.inline.jinja": "home-assistant-jinja",
          "meta.embedded.block.jinja": "home-assistant-jinja"
        },
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "The quote escapes implemented in the conditionals injection do not work inside brackets etc.",
          "Support for single quote escapes in Jinja"
        ],
        "path": "./syntaxes/home-assistant/jinja-single-quote-escape.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-single-quote-escape",
        "injectTo": [
          "source.home-assistant"
        ]
      },
      {
        "comments": [
          "The quote escapes implemented in the conditionals injection do not work inside brackets etc.",
          "Support for double quote escapes in Jinja"
        ],
        "path": "./syntaxes/home-assistant/jinja-double-quote-escape.tmLanguage",
        "scopeName": "injection.homeassistant.jinja-double-quote-escape",
        "injectTo": [
          "source.home-assistant"
        ]
      }
    ],
    "commands": [
      {
        "command": "vscode-home-assistant.reloadAll",
        "title": "Reload all integrations",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.scriptReload",
        "title": "Reload Scripts",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.groupReload",
        "title": "Reload Groups",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homeassistantCheckConfig",
        "title": "Check Configuration (remote!)",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homeassistantReloadCoreConfig",
        "title": "Reload Configuration",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homeassistantRestart",
        "title": "Restart Home Assistant",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.automationReload",
        "title": "Reload Automations",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.conversationReload",
        "title": "Reload conversation intents",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.sceneReload",
        "title": "Reload Scenes",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.themeReload",
        "title": "Reload Themes",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.inputReload",
        "title": "Reload Inputs",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.homekitReload",
        "title": "Reload HomeKit",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.filesizeReload",
        "title": "Reload File Size",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.minMaxReload",
        "title": "Reload Min/Max",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.genericThermostatReload",
        "title": "Reload Generic Thermostat",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.genericCameraReload",
        "title": "Reload Generic Camera",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.pingReload",
        "title": "Reload Ping",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.trendReload",
        "title": "Reload Trend",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.historyStatsReload",
        "title": "Reload History Stats",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.universalReload",
        "title": "Reload Universal Media Player",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.statisticsReload",
        "title": "Reload Statistics",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.filterReload",
        "title": "Reload Filter",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.restReload",
        "title": "Reload REST",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.commandLineReload",
        "title": "Reload Command Line",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.bayesianReload",
        "title": "Reload Bayesian",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.telegramReload",
        "title": "Reload Telegram",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.smtpReload",
        "title": "Reload SMTP",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.mqttReload",
        "title": "Reload MQTT",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.rpioGpioReload",
        "title": "Reload Raspberry Pi GPIO",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.knxReload",
        "title": "Reload KNX",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.templateReload",
        "title": "Reload Template Entities",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.customTemplatesReload",
        "title": "Reload custom Jinja2 templates",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.hassioAddonRestartGitPull",
        "title": "Restart 'Git Pull' Add-on",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.hassioHostReboot",
        "title": "Reboot Supervisor Host",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.getErrorLog",
        "title": "Get Error Logs",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.renderTemplate",
        "title": "Render Template",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.manageAuth",
        "title": "Manage Home Assistant Authentication",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.debugAuth",
        "title": "Debug Home Assistant Authentication",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.repairAuth",
        "title": "Repair Home Assistant Authentication Configuration",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.testConnection",
        "title": "Test Home Assistant Connection",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.openInBrowser",
        "title": "Open Home Assistant in Browser",
        "category": "Home Assistant"
      },
      {
        "command": "vscode-home-assistant.showReloadIntegrations",
        "title": "Reload specific integration",
        "category": "Home Assistant"
      }
    ],
    "configurationDefaults": {
      "[home-assistant]": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": true
        },
        "editor.autoIndent": "advanced"
      }
    },
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-home-assistant.renderTemplate",
          "when": "editorHasSelection"
        },
        {
          "command": "vscode-home-assistant.showReloadIntegrations"
        },
        {
          "command": "vscode-home-assistant.reloadAll"
        },
        {
          "command": "vscode-home-assistant.homeassistantReloadCoreConfig",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.homeassistantRestart",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.scriptReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.groupReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.automationReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.conversationReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.sceneReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.themeReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.inputReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.homekitReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.filesizeReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.minMaxReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.genericThermostatReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.genericCameraReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.pingReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.trendReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.historyStatsReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.universalReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.statisticsReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.filterReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.restReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.commandLineReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.bayesianReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.telegramReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.smtpReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.mqttReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.rpioGpioReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.knxReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.templateReload",
          "when": "false"
        },
        {
          "command": "vscode-home-assistant.customTemplatesReload",
          "when": "false"
        }
      ],
      "editor/context": [
        {
          "command": "vscode-home-assistant.renderTemplate",
          "group": "home-assistant",
          "when": "editorHasSelection"
        }
      ],
      "editor/title": [
        {
          "command": "vscode-home-assistant.reloadAll",
          "title": "Home Assistant: Quick reload all",
          "group": "navigation@1"
        },
        {
          "command": "vscode-home-assistant.showReloadIntegrations",
          "title": "Home Assistant: Reload specific integration",
          "group": "navigation@2"
        }
      ],
      "home-assistant.reload": [
        {
          "command": "vscode-home-assistant.automationReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.bayesianReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.commandLineReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.conversationReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.customTemplatesReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.filesizeReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.filterReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.genericCameraReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.genericThermostatReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.groupReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.historyStatsReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.homekitReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.homeassistantReloadCoreConfig",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.inputReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.knxReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.minMaxReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.mqttReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.pingReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.restReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.rpioGpioReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.sceneReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.scriptReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.smtpReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.statisticsReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.telegramReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.templateReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.themeReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.trendReload",
          "group": "2_components"
        },
        {
          "command": "vscode-home-assistant.universalReload",
          "group": "2_components"
        }
      ]
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix"
    ]
  },
  "scripts": {
    "compile": "tsc -p src/language-service/tsconfig.json && node src/language-service/dist/schemas/generateSchemas.js --quick && tsc -p ./ ",
    "format:eslint": "eslint \"**/src/**/*.ts\" --fix",
    "format:prettier": "prettier \"**/src/**/*.json\" --write",
    "format": "npm run format:eslint && npm run format:prettier",
    "lint:eslint": "eslint \"**/src/**/*.ts\"",
    "lint:prettier": "prettier \"**/src/**/*.json\" --check",
    "lint:types": "tsc",
    "lint": "npm run lint:eslint && npm run lint:prettier && npm run lint:types",
    "schema": "ts-node src/language-service/src/schemas/generateSchemas.ts",
    "test": "npm run compile && vscode-test",
    "test:old": "npm run compile && node ./out/test/runTest.js",
    "watch": "tsc -watch -p ./",
    "prepare": "husky"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@stylistic/eslint-plugin": "^5.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "24.0.3",
    "@types/request": "2.48.12",
    "@types/vscode": "^1.100.0",
    "@types/uuid": "^10.0.0",
    "@types/ws": "8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.34.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.29.0",
    "eslint-config-prettier": "^10.1.5",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.2",
    "mocha": "^11.7.1",
    "prettier": "^3.6.1",
    "rimraf": "6.0.1",
    "ts-loader": "^9.5.2",
    "ts-node": "10.9.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.35.0",
    "typescript-json-schema": "0.65.1"
  },
  "dependencies": {
    "@vscode/extension-telemetry": "^1.0.0",
    "axios": "^1.10.0",
    "bufferutil": "^4.0.9",
    "home-assistant-js-websocket": "^9.5.0",
    "utf-8-validate": "^6.0.5",
    "vscode-json-languageservice": "^5.6.0",
    "vscode-languageclient": "^9.0.1",
    "vscode-languageserver": "^9.0.1",
    "vscode-languageserver-protocol": "3.17.5",
    "vscode-languageserver-textdocument": "^1.0.12",
    "vscode-uri": "3.1.0",
    "ws": "8.18.2",
    "uuid": "^11.1.0",
    "yaml": "2.8.0",
    "yaml-language-server": "1.18.0"
  }
}
